@model Post
@using CollabApp.mvc.Models
@using static CollabApp.mvc.Utilities.FileHelper
@using Markdig


@{
    string title = Model?.Title ?? "Default Title";
    ViewData["Title"] = title;
}

<!DOCTYPE html>
<html>
<head>
    <title>@title</title>
    <link rel="stylesheet" href="PostView.cshtml.css">
</head>
<body>
    <div class="container">
        <div class="post">
            <div class="post-header">
                <p class="posted-by">Posted by @Model?.Author?.Username
                    @{
                        var howManyDaysAgo = DateTime.Now - Model.DatePosted;
                        var daysAgo = (int)howManyDaysAgo.TotalDays;
                        var hoursAgo = (int)howManyDaysAgo.TotalHours;
                        if (daysAgo == 0)
                        {
                            @: @hoursAgo hours ago               
                        }
                        else if (daysAgo == 1)
                        {
                            @:Yesterday
                        }
                        else
                        {
                            @: @daysAgo days ago    
                        }
                    }
                </p>
                <h1>@title</h1>
                @if (Model.IsQuestion)
                {
                    <p class="question-label">[This post is a question.]</p>
                }
            </div>

            <div class="post-description">
                @Html.Raw(Markdown.ToHtml(Model?.Description ?? "No Description"))
            </div>

            <div class="container">
                @{
                    var files = (ViewData["Attachments"] as List<Attachment>);
                }
                @if (@Model != null && files != null)
                {
                    @foreach (var file in files)
                    {
                        if (file.FileType.IsPdfFile())
                        {
                            <iframe src="@file.SignedUrl" class="pdf-viewer"></iframe>
                            <a href="@file.SignedUrl" target="_blank" class="btn btn-primary">Open PDF in New Tab</a>
                        }
                        else if (file.FileType.IsAudioFile())
                        {
                            <audio controls>
                                <source src="@file.SignedUrl">
                                Your browser does not support the audio element.
                            </audio>
                        }
                        else if (file.FileType.IsVideoFile())
                        {
                            <video controls>
                                <source src="@file.SignedUrl">
                                Your browser does not support the video tag.
                            </video>
                        }
                        else if (file.FileType.IsImageFile())
                        {
                            <div class="post-image">
                                <img src="@file.SignedUrl" class="figure-img img-fluid rounded" alt="@file.FileName">
                            </div>
                        }
                        else
                        {
                            <a href="@file.SignedUrl" download="@file.FileName">@file.FileName</a>
                        }
                    }
                }
            </div>
        </div>
        </div>

        @if (@Context.Session.GetInt32("UserId") == Model.AuthorId)
        {
            <div class="edit-delete-buttons">
                <form asp-controller="Post" asp-action="Edit" asp-route-id="@Model.Id" method="get">
                    <button type="submit" class="submit-button">Edit</button>
                </form>
                <form asp-controller="Post" asp-action="Delete" asp-route-id="@Model.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this post?');">
                    <button type="submit" class="submit-button">Delete</button>
                </form>
            </div>
        }
        @if (!string.IsNullOrEmpty(TempData["ErrorMessage"] as string))
        {
            <div class="alert alert-danger mt-3">
                @TempData["ErrorMessage"]
            </div>
        }


        <div class="container">
            @{
                var comments = (ViewData["Comments"] as List<Comment>)?.OrderByDescending(c => c.Rating);
            }
            @if (@Model != null && comments != null)
            {
                <ul>
                    @foreach (var comment in comments)
                    {
                    <div class="individual-comment">
                        <div class="comment-info">
                            <div class="comment-content">
                                <p class="comment-description">@comment.Description</p>
                            </div>
                            <div class="comment-author">
                                <p class="author-name">@comment.Author?.Username</p>
                            </div>
                            <div class="comment-date">
                                <p>@comment.DatePosted</p>
                            </div>
                        </div>

                        <div class="comment-rating">
                            <form asp-controller="Post" asp-action="ChangeRating" method="post">
                                <input type="hidden" name="postId" value="@Model.Id" />
                                <input type="hidden" name="commentId" value="@comment.Id" />
                                <input type="hidden" name="rating" value="@RatingOption.Upvote" />
                                <button type="submit" class="upvote-button">+</button>
                            </form>
                            @comment.Rating
                            <form asp-controller="Post" asp-action="ChangeRating" method="post">
                                <input type="hidden" name="postId" value="@Model.Id" />
                                <input type="hidden" name="commentId" value="@comment.Id" />
                                <input type="hidden" name="rating" value="@RatingOption.Downvote" />
                                <button type="submit" class="downvote-button">-</button>
                            </form>
                        </div>
                    </div>
                    }
                </ul>
            }
            else
            {
                <p>No comments available.</p>
            }
        </div>
    </div>
    

    <div class="container">
        <h3>Add a Comment</h3>
        <form asp-controller="Post" asp-action="AddComment" method="post">
            <input asp-for="AuthorId" type="hidden" value="@Context.Session.GetInt32("UserId")" />
            <input asp-for="Id" type="hidden"/>
            <div class="form-group">
                @* <label for="commentText">Comment Text:</label> *@
                <input type="text" id="commentDescription" name="commentDescription" class="form-control" placeholder="Comment text"/>
            </div>
            <button type="submit" class="submit-button">Submit</button>
        </form>

        @if(@ViewBag.ErrorMessage != null)
        {
            <div class="alert alert-danger mt-3">
                @ViewBag.ErrorMessage
            </div>
        }
    </div>
</body>
</html>